<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
 "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
 
<mapper namespace="com.netctoss.dao.AdminDao">
	<sql id="feilds">
		admin_id,
		admin_code,
		password,
		name,
		telephone,
		email,
		enrolldate
	</sql>
	<!-- 查询管理员全部信息 -->
	<select id="findAll" resultMap="adminsMap" useCache="true">
		SELECT 
			a.admin_id,
			a.admin_code,
			a.password,
			a.name,
			a.telephone,
			a.email,
			a.enrolldate,
			r.name as rname,
			r.role_id
		FROM admin_info a
		LEFT JOIN
			admin_role ar
		ON  a.admin_id = ar.admin_id
		LEFT JOIN 
			role_info r
		ON  ar.role_id = r.role_id
	</select>
	
	<!-- 结果映射 -->
	<resultMap type="com.netctoss.entity.Admin" id="adminsMap">
		<id property="admin_id" column="admin_id" />
		<result property="admin_code" column="admin_code"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="telephone" column="telephone"/>
		<result property="email" column="email"/>
		<result property="enrolldate" column="enrolldate"/>
		
		<!-- 关联属性 -->
		<collection property="roles" javaType="java.util.Set" 
			ofType="com.netctoss.entity.Role" >
			<id property="role_id" column="role_id"/>
			<result property="name" column="rname"/>
		</collection>
	</resultMap>
	
	<!-- 根据管理员code查询管理员信息 -->
	<select id="findByCode" resultType="com.netctoss.entity.Admin"
		parameterType="string" useCache="true">
		SELECT
			<include refid="feilds"/>
		FROM admin_info
		WHERE admin_code = #{admin_code}
	</select>
	
	<!-- 根据管理员id查询管理员信息 -->
	<select id="findById" resultMap="adminsMap"
		parameterType="int" useCache="true">
		SELECT 
			a.admin_id,
			a.admin_code,
			a.password,
			a.name,
			a.telephone,
			a.email,
			a.enrolldate,
			r.name as rname,
			r.role_id
		FROM admin_info a
		LEFT JOIN
			admin_role ar
		ON  a.admin_id = ar.admin_id
		LEFT JOIN 
			role_info r
		ON  ar.role_id = r.role_id
		WHERE a.admin_id = #{admin_id}
	</select>
	
	<!-- 更新管理员 -->
	<update id="update" parameterType="com.netctoss.entity.Admin">
		UPDATE admin_info 
		<set>
			<if test="admin_code != null">
				admin_code = #{admin_code},
			</if>
			<if test="password != null">
				password = #{password},
			</if>
			<if test="name != null">
				name = #{name},
			</if>
			<if test="telephone != null">
				telephone = #{telephone},
			</if>
			<if test="email != null">
				email = #{email},
			</if>
			<if test="enrolldate != null">
				enrolldate = #{enrolldate}
			</if>
		</set>
			WHERE admin_id = #{admin_id}
	</update>
	
	<!-- 删除管理员的方法 -->
	<delete id="delete" parameterType="java.lang.Integer">
		DELETE FROM admin_info WHERE admin_id = #{id}
	</delete>
	
	<!-- 保存管理员的方法   获取生成主键 -->
	<insert id="save" parameterType="com.netctoss.entity.Admin"
		useGeneratedKeys="true" keyProperty="admin_id" >
		INSERT INTO admin_info
			(
				admin_code,
				password,
				name,
				telephone,
				email,
				enrolldate
			)
		VALUES(
			#{admin_code},
			#{password},
			#{name},
			#{telephone},
			#{email},
			#{enrolldate}
		)
	</insert>
	
</mapper>